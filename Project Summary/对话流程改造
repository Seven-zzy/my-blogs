3.1 对话流程改造
一、对话功能简介
    对话流程主要包括两个阶段。
第一阶段：意图澄清阶段，主要包括意图分类，以及意图相关槽位的填充，槽位确认，意图确认等。在意图完全澄清后，进入第二阶段。
第二阶段：获取技能资源阶段，获取相关的技能资源，满足用户意图。
      由这两个阶段引出了对话的三种状态：普通单轮对话、强多轮对话及弱多轮对话
普通单轮对话：和用户的一次对话交互就完成。如 新建一个9点的闹钟。 其包括阶段1+阶段2
强多轮对话：完成一个任务缺少必要信息，需要和用户多次对话交互完成。          如 Q：我要买火车票。 A：您要从哪里出发。 Q：北京  ........... 等
弱多轮对话：用户省略掉和前面一次发生的对话的相同信息，需要系统自动理解补全（最好能通过指代消解全部cover）。             如 Q: 今天天气怎么样？ A：今天天气多云，35度   Q：明天呢？ .... 等
二、旧流程问题分析
     对于原来的流程，center没有感知这两个阶段的不同，统一由技能dm处理。由此会产生如下问题：
对话策略分散：分布在center和技能dm，后续的一些较复杂的对话决策，无法较简单实现。如一些全局对话策略，意图调整功能等。   优化建议：对话策略统一收归到中控，中控建设对话指令，提供技能dm使用
模块定位和解耦不合理：center和dm都需要和NLU有所耦合， center关心意图分类， 而技能dm关心提槽和技能资源获取。                  优化建议：只有中控与NLU沟通，做对话策略(阶段1),  技能dm做技能资源获取或执行(阶段2)
             
                
三、优化方案
        由于目前的技能较多，避免出现大规模的技能迁移成本及NLU能力支持，导致方案落地的可控。
        所以本次改造主要在center和技能dm框架层面改动，并引入新的中控对话指令来实现平滑迁移。
  3.1 对话流程的改动
   3.1.1 单轮对话流程
          
            注：单轮对话，加入了红色部分流程，引入中控对话模版指令，随技能dm回包返回[可选]。
如果带模版指令：会走模版填充流程
如果不带模版指令：直接采用技能dm的回复话术。
 3.1.2 强多轮对话流程
    
    兜底流程特殊说明【兜底逻辑不变】：
在意图澄清阶段：该阶段本来要明确用户的意图，所以在提槽识别失败，再次提升用户澄清意图，而不是做兜底意图跳转流程。如果达到配置的错误最大次数，走重新分类流程。
在取资源阶段：如果失败，采用技能的兜底，如果技能超时或出错，走重新分类流程。
     注意：目前先支持开放技能平台和云端技能平台，先按照和庞翔宇沟通的结果来处理，如果后续有些技能不支持，在增加流程或采用原来重新走分类支持。
 3.1.3 弱多轮对话流程
     
    注：后续如果分类和提测接口合并，流程会更加简单。
3.1.4 流程改造的好处：
 对话策略统一收归到中控：支持后续支持更加复杂的对话策略，如意图调整等，并提供基础的对话能力，通过中控对话指令的形式，提供给技能dm使用。
模块定位和解耦合理：只有中控和NLU对接，做对话策略(意图澄清)，  技能dm做技能资源获取或执行。
3.1.5 新旧流程的平滑切换方案：
对于首轮：新旧流程是没有变更的
旧流程：  首轮回包的时候 没有返回 中控对话指令。
新流程：首轮回包的时候 返回 中控对话指令。
   注：对于强多轮的兜底流程，如果还是保留，在提槽的过程，也调用兜底的分类过成。
  3.2 中控对话指令
   具体方案：4.2 中控对话指令
   



